version: '3'
services:
    web:
        image: scores-dev
        build: .
        command: python manage.py runserver 0.0.0.0:8000
        ports:
            - "8000:8000"
        volumes:
            - .:/code
        environment:
          - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
        depends_on:
            - db
    db:
        image: postgres:11
        container_name: scores-postgres
        environment:
            - POSTGRES_USER=project_admin
            - POSTGRES_PASSWORD=W43eQduN6f7QHRvtJaCi4JP7DqWZtABy4CQv
            - POSTGRES_DB=scores
        ports:
            - "5432:5432"

    rabbitmq:
      image: rabbitmq:3-management
      container_name: scores-rabbit
      restart: "no"
      ports:
        - "15672:15672"
        - "5672:5672"
      environment:
        - RABBITMQ_DEFAULT_USER=admin
        - RABBITMQ_DEFAULT_PASS=guest10

    celery:
      build: .
      command: celery -A scores worker -l INFO
      volumes:
          - .:/code
      environment:
        - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
        - CELERY_BROKER_URL=amqp://admin:guest10@rabbitmq:5672
        - CELERY_ACCEPT_CONTENT = ['json']
        - CELERY_TASK_SERIALIZER = 'json'
        - CELERY_RESULT_SERIALIZER = 'json'
        - CELERY_TIMEZONE = 'Europe/Warsaw'
      depends_on:
        - rabbitmq

    celery-beat:
      build: .
      command: celery -A scores beat -l INFO
      volumes:
          - .:/code
      environment:
        - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
        - CELERY_ACCEPT_CONTENT = ['json']
        - CELERY_TASK_SERIALIZER = 'json'
        - CELERY_RESULT_SERIALIZER = 'json'
        - CELERY_TIMEZONE = 'Europe/Warsaw'
        - CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'
      depends_on:
        - rabbitmq
